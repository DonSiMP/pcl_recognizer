#!/usr/bin/env python
PACKAGE = "pcl_recognizer"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("model_ss",     double_t,    0, "Model uniform sampling radius (default 0.01)", .01, 0, .5)
gen.add("scene_ss",     double_t,    0, "Scene uniform sampling radius (default 0.03)", .03, 0, .5)
gen.add("descr_rad",    double_t,    0, "Descriptor radius (default 0.02)", .02, 0, .5)
gen.add("rf_rad",       double_t,    0, "Reference frame radius (default 0.015)", .015, 0, .5)
gen.add("cg_size",      double_t,    0, "Cluster size (default 0.01)", .01, 0, .5)
gen.add("cg_thresh",    double_t,    0, "Clustering threshold (default 5)", 5, 0, 100)
gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
gen.add("recalculate",   bool_t,   0, "temporary trigger",  False)
gen.add("use_hough",   bool_t,   0, "temporary trigger",  False)

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
gen.generate(PACKAGE, "pcl_recognizer", "Params")

view_gen = ParameterGenerator()

view_gen.add("input",   bool_t,   0, "View input cloud",  False)
view_gen.add("keypoints",   bool_t,   0, "View keypoints",  False)
view_gen.add("normals",   bool_t,   0, "View normals",  False)
view_gen.add("descriptors",   bool_t,   0, "View descriptors",  False)

view_gen.add("update",   bool_t,   0, "temporary trigger",  False)

exit(view_gen.generate(PACKAGE, "pcl_recognizer", "Viewer"))


